library(gtsummary)
library(palmerpenguins)
draco_ecomorph1 <- read_csv("draco_ecomorph.csv")
#this function works best with datasets without NA values
table_Draco1 <- draco_ecomorph1 %>%
select(species, sex, snout_vent_length_mm, perch_height_cm) %>% #retain variables used in summaries
filter(species %in% c("bimaculatus", "cornutus", "melanopogon")) %>%
tbl_summary(by = species,
missing = "no", # remove missing values (NAs). "ifany" will include a missing values row in table.
digits = all_continuous() ~ 1, #number of displayed digits for continuous variables
label = list(snout_vent_length_mm ~ "SVL (mm)", #change column labels in table
perch_height_cm ~ "Perch Height (cm)",
sex ~ "Sex"),
statistic = list(all_continuous() ~ "{mean} ({sd})", #can use any character for parentheses
all_categorical() ~ "{n}")) %>% #count obs. for categorical variables
#add_p(snout_vent_length_mm ~ "aov") %>% CANT FIGURE OUT HOW TO FORCE ANOVA
add_p(pvalue_fun = ~style_pvalue(.x, digits = 2)) %>% #number of digits displayed for p-values
modify_caption("Table 1. Lizard and Habitat Characteristics") %>%
#modify_header(update = all_stat_cols() ~ "**{level}**") %>% #headers to only contain species name
modify_header(update = list(
label ~ '',
stat_1 ~ '**D. bimaculatus**',
stat_2 ~ '**D. cornutus**',
stat_3 ~ '**D. melanopogon**',
p.value ~ '**P-value**'
))
#show_header_names(table_Draco)
#lets you preview code for changing header names and formatting
table_Draco1
#table_Draco1 %>%
#as_gt() %>%   # convert to gt table for additional formatting options and saving
#gt::gtsave(filename = "draco_ecomorph_table.pdf") #save file
table_penguins <- penguins %>%
select(species, sex, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g) %>% #retain variables used in summaries
tbl_summary(by = species,
missing = "no", # remove missing values (NAs). "ifany" will include a missing values row in table.
digits = all_continuous() ~ 1, #number of displayed digits for continuous variables
label = list(bill_length_mm ~ "Bill Length (mm)", #change column labels in table
bill_depth_mm ~ "Bill Depth (mm)",
flipper_length_mm ~ "Flipper Length (mm)",
body_mass_g ~ "Body Mass (g)",
sex ~ "Sex"),
statistic = list(all_continuous() ~ "{mean} ({sd})", #can use any character for parentheses
all_categorical() ~ "{n}")) %>% #count obs. for categorical variables
add_p(pvalue_fun = ~style_pvalue(.x, digits = 2)) %>% #number of digits displayed for p-values
modify_caption("Table 2. Palmer Penguin Morphometrics") %>%
modify_header(update = all_stat_cols() ~ "**{level}**") %>% #headers to only contain species name
as_gt() %>% #have to convert to gt object for some types of formatting
gt::tab_options(heading.align = "left") #can't get to work; most journals want table caption separate anyway
#table caption appears left aligned after it is knit to html.
table_penguins
table_penguins <- penguins %>%
select(species, sex, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g) %>% #retain variables used in summaries
tbl_summary(by = species,
missing = "no", # remove missing values (NAs). "ifany" will include a missing values row in table.
digits = all_continuous() ~ 1, #number of displayed digits for continuous variables
label = list(bill_length_mm ~ "Bill Length (mm)", #change column labels in table
bill_depth_mm ~ "Bill Depth (mm)",
flipper_length_mm ~ "Flipper Length (mm)",
body_mass_g ~ "Body Mass (g)",
sex ~ "Sex"),
statistic = list(all_continuous() ~ "{mean} ({sd})", #can use any character for parentheses
all_categorical() ~ "{n}")) %>% #count obs. for categorical variables
add_p(bill_length_mm ~ "aov") %>%
add_p(pvalue_fun = ~style_pvalue(.x, digits = 2)) %>% #number of digits displayed for p-values
modify_caption("Table 2. Palmer Penguin Morphometrics") %>%
modify_header(update = all_stat_cols() ~ "**{level}**") %>% #headers to only contain species name
as_gt() %>% #have to convert to gt object for some types of formatting
gt::tab_options(heading.align = "left") #can't get to work; most journals want table caption separate anyway
table_penguins <- penguins %>%
select(species, sex, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g) %>% #retain variables used in summaries
tbl_summary(by = species,
missing = "no", # remove missing values (NAs). "ifany" will include a missing values row in table.
digits = all_continuous() ~ 1, #number of displayed digits for continuous variables
label = list(bill_length_mm ~ "Bill Length (mm)", #change column labels in table
bill_depth_mm ~ "Bill Depth (mm)",
flipper_length_mm ~ "Flipper Length (mm)",
body_mass_g ~ "Body Mass (g)",
sex ~ "Sex"),
statistic = list(all_continuous() ~ "{mean} ({sd})", #can use any character for parentheses
all_categorical() ~ "{n}")) %>% #count obs. for categorical variables
add_p(pvalue_fun = ~style_pvalue(.x, digits = 2)) %>% #number of digits displayed for p-values
modify_caption("Table 2. Palmer Penguin Morphometrics") %>%
modify_header(update = all_stat_cols() ~ "**{level}**") %>% #headers to only contain species name
as_gt() %>% #have to convert to gt object for some types of formatting
gt::tab_options(heading.align = "left") #can't get to work; most journals want table caption separate anyway
#table caption appears left aligned after it is knit to html.
table_penguins
iris
library(gtsummary)
library(palmerpenguins)
penguins
tbl_summary(penguins, by = species) %>%
add_p(bill_length_mm ~ "aov")
#not sure why it includes all columns by default; use 'select' if you want fewer columns
tbl_summary(penguins, by = species, missing = "no") %>%
add_p(bill_length_mm ~ "aov")
#not sure why it includes all columns by default; use 'select' if you want fewer columns
tbl_summary(penguins(select(bill_length_mm, bill_depth_mm)), by = species, missing = "no") %>%
add_p(bill_length_mm ~ "aov")
tbl_summary(penguins, by = species, missing = "no") %>%
add_p(bill_length_mm ~ "aov")
#not sure why it includes all columns by default; use 'select' if you want fewer columns
birds <- penguins %>%
select(bill_length_mm, bill_depth_mm)
tbl_summary(birds, by = species, missing = "no") %>%
add_p(bill_length_mm ~ "aov")
library(gtsummary)
library(palmerpenguins)
library(tidyverse)
birds <- penguins %>%
select(bill_length_mm, bill_depth_mm)
tbl_summary(birds, by = species, missing = "no") %>%
add_p(bill_length_mm ~ "aov")
penguins
birds <- penguins %>% select(bill_length_mm, bill_depth_mm)
View(birds)
birds <- penguins %>% select(species, bill_length_mm, bill_depth_mm)
tbl_summary(birds, by = species, missing = "no") %>%
add_p(bill_length_mm ~ "aov")
#not sure why it includes all columns by default; use 'select' if you want fewer columns
birds <- penguins %>% select(species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
tbl_summary(birds, by = species, missing = "no") %>%
add_p(bill_length_mm ~ "aov")
#not sure why it includes all columns by default; use 'select' if you want fewer columns
View(table_Draco1)
library(gtsummary)
library(palmerpenguins)
library(tidyverse)
theme_gtsummary_mean_sd()
gtTable <- mtcars %>%
select(cyl, mpg) %>%
tbl_summary(by = cyl) %>%
add_p()
oneWay <- aov(mpg ~ cyl, data = mtcars)
summary(oneWay)
packageVersion("gtsummary")
install.packages("gtsummary")
library(gtsummary)
library(palmerpenguins)
library(tidyverse)
theme_gtsummary_mean_sd()
gtTable <- mtcars %>%
select(cyl, mpg) %>%
tbl_summary(by = cyl) %>%
add_p()
oneWay <- aov(mpg ~ cyl, data = mtcars)
summary(oneWay)
birds <- penguins %>% select(species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
tbl_summary(birds, by = species, missing = "no") %>%
#add_p(bill_length_mm ~ "aov")
add_p(test = all_continuous() ~ "aov")
#not sure why it includes all columns by default; use 'select' if you want fewer columns
birds <- penguins %>% select(species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
tbl_summary(birds, by = species, missing = "no") %>%
#add_p(bill_length_mm ~ "aov")
add_p(test = all_continuous() ~ "aov") %>%
# add a header to the statistic column, which is hidden by default
# adding the header will also unhide the column
modify_header(statistic ~ "**Test Statistic**") %>%
modify_fmt_fun(statistic ~ style_sigfig)
birds <- penguins %>% select(species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
tbl_summary(birds, by = species, missing = "no") %>%
#add_p(bill_length_mm ~ "aov")
add_p(test = all_continuous() ~ "aov") %>%
# add a header to the statistic column, which is hidden by default
# adding the header will also unhide the column
modify_header(statistic ~ "**Test Statistic**")
birds <- penguins %>% select(species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
tbl_summary(birds, by = species, missing = "no") %>%
#add_p(bill_length_mm ~ "aov")
add_p(test = all_continuous() ~ "aov")
#not sure why it includes all columns by default; use 'select' if you want fewer columns
#probably the most straight forward example
birds <- penguins %>% select(species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
tbl_summary(birds, by = species, missing = "no") %>%
#add_p(bill_length_mm ~ "aov")
#add_p(test = all_continuous() ~ "aov")
add_p(all_continuous() ~ "aov") %>%
# add a header (which also unhides a hidden column)
modify_header(statistic ~ "**Test Statistic**") %>%
# add a function to format the column
modify_fmt_fun(statistic ~ style_sigfig)
packageVersion("gtsummary")
library(gtsummary)
library(palmerpenguins)
library(tidyverse)
theme_gtsummary_mean_sd()
#probably the most straight forward example
birds <- penguins %>% select(species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
tbl_summary(birds, by = species, missing = "no") %>%
#add_p(bill_length_mm ~ "aov")
#add_p(test = all_continuous() ~ "aov")
add_p(all_continuous() ~ "aov") %>%
# add a header (which also unhides a hidden column)
modify_header(statistic ~ "**Test Statistic**") %>%
# add a function to format the column
modify_fmt_fun(statistic ~ style_sigfig)
tbl <-
trial %>%
select(grade, age, marker) %>%
tbl_summary(
by = grade,
missing = "no"
) %>%
add_p(all_continuous() ~ "aov") %>%
# add a header (which also unhides a hidden column)
modify_header(statistic ~ "**Test Statistic**") %>%
# add a function to format the column
modify_fmt_fun(statistic ~ style_sigfig)
tbl <-
trial %>%
select(grade, age, marker) %>%
tbl_summary(
by = grade,
missing = "no"
) %>%
add_p(all_continuous() ~ "aov") %>%
# add a header (which also unhides a hidden column)
modify_header(statistic ~ "**Test Statistic**") %>%
# add a function to format the column
modify_fmt_fun(statistic ~ style_sigfig)
#probably the most straight forward example
birds <- penguins %>% select(species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
tbl_summary(birds, by = species, missing = "no") %>%
add_p(all_continuous() ~ "aov")
# add a header (which also unhides a hidden column)
#modify_header(statistic ~ "**Test Statistic**") %>%
# add a function to format the column
#modify_fmt_fun(statistic ~ style_sigfig)
#there is still a bug in the suggested way to insert test statistics
#not sure why it includes all columns by default; use 'select' if you want fewer columns
#probably the most straight forward example
birds <- penguins %>% select(species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
tbl_summary(birds, by = species, missing = "no") %>%
add_p(all_continuous() ~ "aov") %>%
# add a header (which also unhides a hidden column)
# modify_header(statistic ~ "**Test Statistic**") %>%
# add a function to format the column
# modify_fmt_fun(statistic ~ style_sigfig)
add_q(method = "bonferroni")
#there is still a bug in the suggested way to insert test statistics (commented out)
#https://stackoverflow.com/questions/69606149/how-do-i-display-test-statistic-f-value-for-anova-using-tbl-summary
?add_q
#probably the most straight forward example
birds <- penguins %>% select(species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
tbl_summary(birds, by = species, missing = "no") %>%
add_p(all_continuous() ~ "aov") %>%
# add a header (which also unhides a hidden column)
# modify_header(statistic ~ "**Test Statistic**") %>%
# add a function to format the column
# modify_fmt_fun(statistic ~ style_sigfig)
add_q(method = "fdr")
#there is still a bug in the suggested way to insert test statistics (commented out)
#https://stackoverflow.com/questions/69606149/how-do-i-display-test-statistic-f-value-for-anova-using-tbl-summary
library(gtsummary)
library(palmerpenguins)
library(tidyverse)
theme_gtsummary_mean_sd()
#https://stackoverflow.com/questions/68722812/is-it-possible-to-extract-the-full-output-for-the-statistical-tests-performed-in
gtTable <- mtcars %>%
select(cyl, mpg) %>%
tbl_summary(by = cyl) %>%
add_p()
oneWay <- aov(mpg ~ cyl, data = mtcars)
summary(oneWay)
tbl_summary(trial, by = trt) %>%
add_p(age ~ "t.test", test.args = age ~ list(var.equal = TRUE))
tbl_summary(trial, by = trt) %>%
add_p(age ~ "aov")
tbl_summary(iris, by = Species) %>%
add_p(Sepal.Length ~ "aov")
#not sure why it includes all columns by default; use 'select' if you want fewer columns
#probably the most straight forward example
birds <- penguins %>% select(species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
tbl_summary(birds, by = species, missing = "no") %>%
add_p(all_continuous() ~ "aov") %>%
# add a header (which also unhides a hidden column)
# modify_header(statistic ~ "**Test Statistic**") %>%
# add a function to format the column
# modify_fmt_fun(statistic ~ style_sigfig)
add_q(method = "fdr")
#there is still a bug in the suggested way to insert test statistics (commented out)
#https://stackoverflow.com/questions/69606149/how-do-i-display-test-statistic-f-value-for-anova-using-tbl-summary
#probably the most straight forward example
birds <- penguins %>% select(species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
tbl_summary(birds, by = species, missing = "no") %>%
add_p(all_continuous() ~ "aov") %>%
# add a header (which also unhides a hidden column)
# modify_header(statistic ~ "**Test Statistic**") %>%
# add a function to format the column
# modify_fmt_fun(statistic ~ style_sigfig)
add_q(method = "fdr") %>%
as_flex_table()
library(flextable)
install.packages("flextable")
library(flextable)
install.packages("flextable")
library(flextable)
#probably the most straight forward example
birds <- penguins %>% select(species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
tbl_summary(birds, by = species, missing = "no") %>%
add_p(all_continuous() ~ "aov") %>%
# add a header (which also unhides a hidden column)
# modify_header(statistic ~ "**Test Statistic**") %>%
# add a function to format the column
# modify_fmt_fun(statistic ~ style_sigfig)
add_q(method = "fdr")
#there is still a bug in the suggested way to insert test statistics (commented out)
#https://stackoverflow.com/questions/69606149/how-do-i-display-test-statistic-f-value-for-anova-using-tbl-summary
library(gtsummary)
library(palmerpenguins)
library(tidyverse)
theme_gtsummary_mean_sd()
#https://stackoverflow.com/questions/68722812/is-it-possible-to-extract-the-full-output-for-the-statistical-tests-performed-in
gtTable <- mtcars %>%
select(cyl, mpg) %>%
tbl_summary(by = cyl) %>%
add_p()
oneWay <- aov(mpg ~ cyl, data = mtcars)
summary(oneWay)
tbl_summary(trial, by = trt) %>%
add_p(age ~ "t.test", test.args = age ~ list(var.equal = TRUE))
tbl_summary(trial, by = trt) %>%
add_p(age ~ "aov")
tbl_summary(iris, by = Species) %>%
add_p(Sepal.Length ~ "aov")
#not sure why it includes all columns by default; use 'select' if you want fewer columns
#probably the most straight forward example
birds <- penguins %>% select(species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
tbl_summary(birds, by = species, missing = "no") %>%
add_p(all_continuous() ~ "aov") %>%
# add a header (which also unhides a hidden column)
# modify_header(statistic ~ "**Test Statistic**") %>%
# add a function to format the column
# modify_fmt_fun(statistic ~ style_sigfig)
add_q(method = "fdr")
#there is still a bug in the suggested way to insert test statistics (commented out)
#https://stackoverflow.com/questions/69606149/how-do-i-display-test-statistic-f-value-for-anova-using-tbl-summary
tbl_summary(iris, by = Species) %>%
add_p(Sepal.Length ~ "emmeans")
tbl_summary(iris, by = Species) %>%
add_p(Sepal.Length ~ "aov")
#not sure why it includes all columns by default; use 'select' if you want fewer columns
tbl_summary(iris, by = Species) %>%
add_p(Species ~ "aov")
tbl_summary(iris, by = Species) %>%
add_p(Sepal.Length ~ "aov")
#not sure why it includes all columns by default; use 'select' if you want fewer columns
tbl_summary(iris, by = Species) %>%
add_p(Sepal.Length ~ "aov") %>%
add_p(Sepal.Length ~ "lme4")
#not sure why it includes all columns by default; use 'select' if you want fewer columns
tbl_summary(iris, by = Species) %>%
add_p(Sepal.Length ~ "aov")
#not sure why it includes all columns by default; use 'select' if you want fewer columns
# packages
pacman::p_load(tidyverse, # data import and handling
conflicted, # handling function conflicts
emmeans, multcomp, multcompView, # adjusted mean comparisons
ggplot2, desplot) # plots
# conflicts between functions with the same name
conflict_prefer("filter", "dplyr")
conflict_prefer("select", "dplyr")
# data (import via URL)
dataURL <- "https://raw.githubusercontent.com/SchmidtPaul/DSFAIR/master/data/Mead1993.csv"
dat <- read_csv(dataURL)
dat
dat <- dat %>%
mutate_at(vars(variety), as.factor)
desplot(data = dat, flip = TRUE,
form = variety ~ col + row,              # fill color per variety
text = variety, cex = 1, shorten = "no", # show variety names per plot
main = "Field layout", show.key = F)     # formatting
dat %>%
group_by(variety) %>%
summarize(mean    = mean(yield),
std.dev = sd(yield))
ggplot(data = dat,
aes(y = yield, x = variety)) +
geom_point() +  # scatter plot
ylim(0, NA) +   # force y-axis to start at 0
theme_classic() # clearer plot format
mod <- lm(yield ~ variety, data = dat)
mod %>% anova()
mean_comparisons <- mod %>%
emmeans(specs = "variety") %>% # get adjusted means for varieties
cld(adjust="tukey", Letters=letters) # add compact letter display
mean_comparisons
ggplot() +
# black dots representing the raw data
geom_point(
data = dat,
aes(y = yield, x = variety)
) +
# red dots representing the adjusted means
geom_point(
data = mean_comparisons,
aes(y = emmean, x = variety),
color = "red",
position = position_nudge(x = 0.1)
) +
# red error bars representing the confidence limits of the adjusted means
geom_errorbar(
data = mean_comparisons,
aes(ymin = lower.CL, ymax = upper.CL, x = variety),
color = "red",
width = 0.1,
position = position_nudge(x = 0.1)
) +
# red letters
geom_text(
data = mean_comparisons,
aes(y = emmean, x = variety, label = str_trim(.group)),
color = "red",
position = position_nudge(x = 0.2),
hjust = 0
) +
ylim(0, NA) + # force y-axis to start at 0
ylab("Yield in t/ha") + # label y-axis
xlab("Variety") +      # label x-axis
labs(caption = "Black dots represent raw data
Red dots and error bars represent adjusted mean with 95% confidence limits per variety
Means followed by a common letter are not significantly different according to the Tukey-test") +
theme_classic() # clearer plot format
# data (import via URL)
dataURL <- "https://raw.githubusercontent.com/SchmidtPaul/DSFAIR/master/data/Mead1993b.csv"
ex1dat <- read_csv(dataURL)
## # exercise 1
##
## # packages
## pacman::p_load(readr, tidyverse, forcats, # data import and handling
##                emmeans, multcomp, multcompView, # mean comparisons
##                ggplot2, desplot,          # plots
##                report, equatiomatic)      # automated analysis summaries
##
## # data (import via URL)
## dataURL <- "https://raw.githubusercontent.com/SchmidtPaul/DSFAIR/master/data/Mead1993b.csv"
## ex1dat <- read_csv(dataURL)
##
## # in case of removing all moisture values larger than 12 run this:
## # ex1dat <- ex1dat %>%
## #   filter(moisture <= 12)
##
## # format first!
## ex1dat <- ex1dat %>%
##   mutate_at(vars(soil), as.factor)
##
## # How many samples per soil were taken?
## ex1dat %>%
##   count(soil)
##
## # Which soil has the highest value for moisture?
## ex1dat %>%
##   group_by(soil) %>%
##   summarise(mean = mean(moisture)) %>%
##   arrange(desc(mean))
##
## # Draw a plot with moisture values per soil
## ggplot(data = ex1dat,
##        aes(y = moisture, x = soil)) +
##   geom_point() +
##   ylim(0, NA) +
##   theme_classic()
##
## # Compute an ANOVA
## mod <- lm(moisture ~ soil, data = ex1dat)
##
## mod %>% anova() # significant!
##
## # Perform multiple (mean) comparisons using the LSD test/t-test.
## mod %>%
##   emmeans(pairwise ~ "soil", adjust="none") %>% # adjust="none" for t-test
##   pluck("emmeans") %>%
##   cld(details=TRUE, Letters=letters)
ggplot() +
# black dots representing the raw data
geom_point(
data = dat,
aes(y = yield, x = variety)
) +
# red dots representing the adjusted means
geom_point(
data = mean_comparisons,
aes(y = emmean, x = variety),
color = "red",
position = position_nudge(x = 0.1)
) +
# red error bars representing the confidence limits of the adjusted means
geom_errorbar(
data = mean_comparisons,
aes(ymin = lower.CL, ymax = upper.CL, x = variety),
color = "red",
width = 0.1,
position = position_nudge(x = 0.1)
) +
# red letters
geom_text(
data = mean_comparisons,
aes(y = emmean, x = variety, label = str_trim(.group)),
color = "red",
position = position_nudge(x = 0.2),
hjust = 0
) +
ylim(0, NA) + # force y-axis to start at 0
ylab("Yield in t/ha") + # label y-axis
xlab("Variety") +      # label x-axis
labs(caption = "Black dots represent raw data
Red dots and error bars represent adjusted mean with 95% confidence limits per variety
Means followed by a common letter are not significantly different according to the Tukey-test") +
theme_classic() # clearer plot format
View(dat)
